#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define FILAS 5
#define COLUMNAS 7

void llenarMatrizAleatoria(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
void imprimirMatriz(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
int sumaDiagonalPrincipal(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
int sumaDiagonalSuperior(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
int sumaDiagonalInferior(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
int sumaPrimeraFila(int columnas, int matriz[][COLUMNAS]);
int sumaUltimaColumna(int filas, int matriz[FILAS][COLUMNAS]);
int sumaFilasPares(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
int sumaColumnasImpares(int filas, int columnas, int matriz[FILAS][COLUMNAS]);
void sumaColumnas(int filas, int columnas, int matriz[FILAS][COLUMNAS]);

void llenarMatrizAleatoria(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            matriz[i][j] = rand() % 10;
        }
    }
}

void imprimirMatriz(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    printf("Matriz:\n");
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
}

int sumaDiagonalPrincipal(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int i = 0; i < filas && i < columnas; i++) {
        suma += matriz[i][i];
    }
    return suma;
}

int sumaDiagonalSuperior(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int i = 0; i < filas - 1; i++) {
        for (int j = i + 1; j < columnas; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumaDiagonalInferior(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int i = 1; i < filas; i++) {
        for (int j = 0; j < i; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumaPrimeraFila(int columnas, int matriz[][COLUMNAS]) {
    int suma = 0;
    for (int j = 0; j < columnas; j++) {
        suma += matriz[0][j];
    }
    return suma;
}

int sumaUltimaColumna(int filas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int i = 0; i < filas; i++) {
        suma += matriz[i][COLUMNAS - 1];
    }
    return suma;
}

int sumaFilasPares(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int i = 0; i < filas; i += 2) {
        for (int j = 0; j < columnas; j++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

int sumaColumnasImpares(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    int suma = 0;
    for (int j = 1; j < columnas; j += 2) {
        for (int i = 0; i < filas; i++) {
            suma += matriz[i][j];
        }
    }
    return suma;
}

void sumaColumnas(int filas, int columnas, int matriz[FILAS][COLUMNAS]) {
    for (int j = 0; j < columnas; j++) {
        int suma = 0;
        for (int i = 0; i < filas; i++) {
            suma += matriz[i][j];
        }
        printf("La suma de la columna %d es: %d\n", j + 1, suma);
    }
}

int main() {
    srand(time(NULL));

    int matriz[FILAS][COLUMNAS];

    llenarMatrizAleatoria(FILAS, COLUMNAS, matriz);
    imprimirMatriz(FILAS, COLUMNAS, matriz);

    printf("Suma diagonal: %d\n", sumaDiagonalPrincipal(FILAS, COLUMNAS, matriz));
    printf("Suma fila 1: %d\n", sumaPrimeraFila(COLUMNAS, matriz));
    printf("Suma columna 7: %d\n", sumaUltimaColumna(FILAS, matriz));
    printf("Suma fila 1: %d\n", sumaPrimeraFila(COLUMNAS, matriz));
    printf("Suma fila 3: %d\n", matriz[2][0] + matriz[2][1] + matriz[2][2] + matriz[2][3] + matriz[2][4] + matriz[2][5] + matriz[2][6]);
    printf("Suma fila 5: %d\n", matriz[4][0] + matriz[4][1] + matriz[4][2] + matriz[4][3] + matriz[4][4] + matriz[4][5] + matriz[4][6]);
    printf("Suma filas impares: %d\n", sumaFilasPares(FILAS, COLUMNAS, matriz));
    printf("Suma columna 2: %d\n", matriz[0][1] + matriz[1][1] + matriz[2][1] + matriz[3][1] + matriz[4][1]);
    printf("Suma columna 4: %d\n", matriz[0][3] + matriz[1][3] + matriz[2][3] + matriz[3][3] + matriz[4][3]);
    printf("Suma columna 6: %d\n", matriz[0][5] + matriz[1][5] + matriz[2][5] + matriz[3][5] + matriz[4][5]);
    printf("Suma columnas pares: %d\n", sumaColumnasImpares(FILAS, COLUMNAS, matriz));
    printf("Suma diagonal: %d\n", sumaDiagonalPrincipal(FILAS, COLUMNAS, matriz));
    printf("Suma triangulo superior: %d\n", sumaDiagonalSuperior(FILAS, COLUMNAS, matriz));
    printf("Suma diagonal: %d\n", sumaDiagonalPrincipal(FILAS, COLUMNAS, matriz));
    printf("Suma triangulo inferior: %d\n", sumaDiagonalInferior(FILAS, COLUMNAS, matriz));

    return 0;
}
